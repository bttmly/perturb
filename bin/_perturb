#!/usr/bin/env node

var path = require("path");
var program = require("commander");
var makeConfig = require("../built/make-config");
var MESSAGES = require("../built/constants/messages");

var pkg = require("../package.json");
var perturb = require("../");

program
  .version(pkg.version)
  .option("-r, --projectRoot <rootDir>", "root directory of the project")
  .option("-t, --testDir <testDir>", "test directory relative to root directory")
  .option("-s, --sourceDir <sourceDir>", "source directory relative to root directory")
  .option("-x, --testGlob <testGlob>", "glob for selecting files in test directory")
  .option("-y, --sourceGlob <sourceGlob>", "glob for selecting files in source directory")
  .option("-c, --testCmd <testCmd>", "test command")
  .option("-k, --killRate", "minimum kill rate to exit with code 0")
  .option("-u, --runner <runner>", "name of runner or runner plugin")
  .parse(process.argv);

if (program.rootDir && program.rootDir[0] !== "/") {
  program.rootDir = path.join(process.cwd(), program.rootDir);
}

var userConfig = omitUndefined({
  rootDir: program.rootDir,
  testDir: program.testDir,
  sourceDir: program.sourceDir,
  testGlob: program.testGlob,
  sourceGlob: program.sourceGlob,
  testCmd: program.testCmd,
  runner: program.runner,
});

// sync errors inside perturb don't seem to properly cause a non-zero exit w/o this
process.on("uncaughtException", function (err) {
  console.log("uncaught error in perturb process", err);
  throw err;
});

// sync errors inside perturb don't seem to properly cause a non-zero exit w/o this
process.on("unhandledRejection", function (err) {
  throw err;
});

// start!
perturb(userConfig).then(function (results) {
  console.log("DONE -- COUNT:", results.length);
});

function omitUndefined (obj) {
  const ret = {};
  for (key in obj) {
    if (obj[key] != null) ret[key] = obj[key]
  }
  return ret;
}
