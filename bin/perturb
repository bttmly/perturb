#!/usr/bin/env node

// shamelessly appropriated from mocha

"use strict";

var path = require("path");

var spawn = require("child_process").spawn;
var perturb = path.join(__dirname, "_perturb");
var args = [perturb];

var bin = process.argv[0];

process.argv.slice(2).forEach(function (arg) {
  var flag = arg.split("=")[0];

  switch (flag) {

  case "--iojs":
    return bin = "iojs";

  case "--harmony":
  case "--harmony-proxies":
  case "--harmony-collections":
  case "--harmony-generators":
  case "--harmony_shipping":
  case "--harmony_arrow_functions":
  case "--harmony_proxies":
    return args.unshift(arg);

  default:
    return args.push(arg);

  }

});

console.log([bin].concat(args).join(" "));

var proc = spawn(bin, args, {stdio: 'inherit'});

proc.on('exit', function (code, signal) {
  process.on('exit', function(){
    if (signal) {
      process.kill(process.pid, signal);
    } else {
      process.exit(code);
    }
  });
});

proc.on('error', console.log);

// terminate children.
process.on('SIGINT', function () {
  proc.kill('SIGINT'); // calls runner.abort()
  proc.kill('SIGTERM'); // if that didn't work, we're probably in an infinite loop, so make it die.
  process.kill(process.pid, 'SIGINT');
});
